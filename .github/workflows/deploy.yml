name: FelixBot Build and Push

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository code
      - uses: actions/checkout@v4

      # Cache Rust dependencies to speed up builds
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "felix-bot-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}"

      # Set up Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:latest

      # Log in to GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Generate a version tag using commit SHA and date
      - name: Generate version tag
        id: version
        run: |
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          echo "tag=${SHORT_SHA}" >> $GITHUB_OUTPUT
          echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      # Build and push the Docker image for ARM64
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/felix-bot:latest
            ghcr.io/${{ github.repository_owner }}/felix-bot:${{ steps.version.outputs.date }}-${{ steps.version.outputs.tag }}
          cache-from: |
            type=registry,ref=ghcr.io/${{ github.repository_owner }}/felix-bot:buildcache
            type=gha
          cache-to: |
            type=registry,ref=ghcr.io/${{ github.repository_owner }}/felix-bot:buildcache,mode=max
            type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            CARGO_NET_GIT_FETCH_WITH_CLI=true
AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Description: FelixPearlBot

Parameters:
  FELIX_DISCORD_WEBHOOK_URL:
    Type: String
    Description: felix-discord-webhook
    NoEcho: true
  PEARL_DISCORD_WEBHOOK_URL:
    Type: String
    Description: pearl-discord-webhook
    NoEcho: true
  ANTHROPIC_API_KEY:
    Type: String
    Description: anthropic-api-key
    NoEcho: true
  WEATHER_API_KEY:
    Type: String
    Description: weather-api-key
    NoEcho: true
  WEATHER_LOCATION:
    Type: String
    Description: weather-location
  WEATHER_LAT:
    Type: String
    Description: weather-latitude
  WEATHER_LON:
    Type: String
    Description: weather-longitude
  BIRTHDAYS_CONFIG:
    Type: String
    Description: birthdays-json-config
    NoEcho: true

Resources:
  FelixPearlBotFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src
      Handler: lambda_function.lambda_handler
      Runtime: python3.13
      Timeout: 60
      MemorySize: 512
      Environment:
        Variables:
          ANTHROPIC_API_KEY: !Ref ANTHROPIC_API_KEY
          FELIX_DISCORD_WEBHOOK_URL: !Ref FELIX_DISCORD_WEBHOOK_URL
          PEARL_DISCORD_WEBHOOK_URL: !Ref PEARL_DISCORD_WEBHOOK_URL
          WEATHER_API_KEY: !Ref WEATHER_API_KEY
          WEATHER_LOCATION: !Ref WEATHER_LOCATION
          WEATHER_LAT: !Ref WEATHER_LAT
          WEATHER_LON: !Ref WEATHER_LON
          BIRTHDAYS_CONFIG: !Ref BIRTHDAYS_CONFIG
          TEST_MODE: "false"
          TZ: "America/New_York"
      Policies:
        - AWSLambdaBasicExecutionRole
      Events:
        DailyScheduleEDT:
          Type: Schedule
          Properties:
            Schedule: cron(0 11 * * ? *) # 7 AM EDT
            Description: Daily schedule for EDT
            Enabled: true
        DailyScheduleEST:
          Type: Schedule
          Properties:
            Schedule: cron(0 12 * * ? *) # 7 AM EST
            Description: Daily schedule for EST
            Enabled: false

  DSTSwitchRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: DSTSwitchInlinePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - events:PutRule
                  - events:PutTargets
                  - events:DeleteRule
                  - events:RemoveTargets
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

  DSTSwitchFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src
      Handler: dst_switch.lambda_handler
      Runtime: python3.13
      Timeout: 30
      MemorySize: 128
      Role: !GetAtt DSTSwitchRole.Arn
      Environment:
        Variables:
          TZ: "America/New_York"
      Events:
        DSTCheck:
          Type: Schedule
          Properties:
            Schedule: cron(0 10 * * ? *) # Check DST daily at 10 UTC
            Description: Daily DST check
            Enabled: true

Outputs:
  FelixPearlBotFunction:
    Description: Felix & Pearl Bot Lambda Function ARN
    Value: !GetAtt FelixPearlBotFunction.Arn
  DSTSwitchFunction:
    Description: DST Switch Lambda Function ARN
    Value: !GetAtt DSTSwitchFunction.Arn
